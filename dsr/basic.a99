
btipioff
	BLWP	@>0000

btipion
	BLWP	@>0000

bsendtst
	MOV	R11,@RET	; stash the return to basic
	MOV	@>832C,R8	; get token pointer to play with
	; do some useful stuff

	BL	@tipirst
	LI	R3,>7FFF
	
	LI	R1,TSWB
!	SWPB	R3
	MOVB	R3,@TDOUT
	SWPB	R3
	MOVB	R1,@TCOUT
	ANDI	R1,TSACKM
!	MOVB	@RCIN,R2
	ANDI	R2,TSACKM
	CB	R1,R2
	JNE	-!
	AI	R1,>0100
	ANDI	R1,TSACKM
	ORI	R1,TSWB
	DEC	R3
	JNE	-!!

	; and return
	JMP	bok

brecvtst
	MOV	R11,@RET
	MOV	@>832C,R8
	; do some data receiving.

	BL	@tipirst
	LI	R3,512
	
	LI	R1,TSRB		; request a byte
!	MOVB	R1,@TCOUT
	ANDI	R1,TSACKM
!	MOVB	@RCIN,R2	; read response
	ANDI	R2,TSACKM
	CB	R1,R2
	JNE	-!		; wait for ack

	MOVB	@RDIN,R2	; capture data
	; check if the data is what we expect, and return early if it isn't.
	SWPB	R3
	CB	R3,R2
	JNE	berror
	SWPB	R3

	AI	R1,>0100	; increment syn/ack
	ANDI	R1,TSACKM
	ORI	R1,TSRB
	DEC	R3		; count the loop down
	JNE	-!!

	; and return
	JMP	bok

bok
	SZCB	@>8342,@>8342	; clear byte for current token, terminates line
	JMP	bdone
	
berror	
	LI	R0,>0700
	MOVB	R0,@>8342

bdone
	AI	R8,>08		; 'finish' parsing the sendtest command
	MOV	R8,@>832C
	SWPB	R8		; write new token pointer to vram for basic
	MOVB	R8,@VDPWA
	SWPB	R8
	MOVB	R8,@VDPWA
	MOV	R8,@>832C
	MOV	@RET,R11
	INCT	R11
	LI	R8,>4000
	SZCB	R8,@>8354
	RT

